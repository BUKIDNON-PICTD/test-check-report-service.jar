import com.rameses.annotations.*;
import com.rameses.util.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import java.rmi.server.UID;

class EstRunningBalancePostService {

	@ActiveDB(value='estrunningbalanceitems', em='testchequedataentry')
	def em;

	@ActiveDB(value='estrunningbalance', em='testchequedataentry')
	def ema;

	@ActiveDB(value='testchequedataentry', em='testchequedataentry')
	def emx;

	@ActiveDB(value='cancelleditems', em='testchequedataentry')
	def emc;

	@Service("DateService")
	def dateSvc;

	@Service('UserService') 
	def userSvc;

	@Env
	def env; 
	
	@ProxyMethod
	public def postCheck( def o ) { 

		//println o

		def rb = emx.findByEstRBAcct( [accountid:o.accountid] );
		if ( !rb ) { 
			throw new Exception("Posting failed. Please create an account in Account Balances menu"); 				
		}

		//println rb
		
		def balance = rb.endbalance;
		rb.totalcredit += o.amount;
		rb.endbalance = rb.endbalance - o.amount;
		
		def detail = [:];
		detail.objid = "ERBI"+new UID();
		detail.parentid = rb.objid;
		detail.lineno = rb.currentlineno;
		detail.txndate = dateSvc.serverDate;
		detail.refid = o.refid;
		detail.refno = o.refno;
		detail.refdate = o.refdate;
		detail.credit = o.amount;	
		detail.debit = 0;
		detail.runbalance = rb.endbalance;
		em.create(detail);
		
		rb.currentlineno += 1;
		ema.update( rb );
		return true;
	}

	@ProxyMethod
	public def postAda( def o ) { 

		//println o

		def rb = emx.findByEstRBAcct( [accountid:o.accountid] );
		if ( !rb ) { 
			throw new Exception("Posting failed. Please create an account in Account Balances menu"); 				
		}

		//println rb
		
		def balance = rb.endbalance;
		rb.totalcredit += o.amount;
		rb.endbalance = rb.endbalance - o.amount;
		
		def detail = [:];
		detail.objid = "ERBI"+new UID();
		detail.parentid = rb.objid;
		detail.lineno = rb.currentlineno;
		detail.txndate = dateSvc.serverDate;
		detail.refid = o.refid;
		detail.refno = o.refno;
		detail.refdate = o.refdate;
		detail.credit = o.amount;	
		detail.debit = 0;
		detail.runbalance = rb.endbalance;
		em.create(detail);
		
		rb.currentlineno += 1;
		ema.update( rb );
		return true;
	}

	@ProxyMethod
	public def postDep( def o ) { 

		//println o

		def rb = emx.findByEstRBAcct( [accountid:o.accountid] );
		if ( !rb ) { 
			throw new Exception("Posting failed. Please create an account in Account Balances menu"); 				
		}

		//println rb
		
		def balance = rb.endbalance;
		rb.totaldebit += o.amount;
		rb.endbalance = rb.endbalance + o.amount;
		
		def detail = [:];
		detail.objid = "ERBI"+new UID();
		detail.parentid = rb.objid;
		detail.lineno = rb.currentlineno;
		detail.txndate = dateSvc.serverDate;
		detail.refid = o.refid;
		detail.refno = o.refno;
		detail.refdate = o.refdate;
		detail.credit = 0;	
		detail.debit = o.amount;
		detail.runbalance = rb.endbalance;
		em.create(detail);
		
		rb.currentlineno += 1;
		ema.update( rb );
		return true;
	}

	@ProxyMethod
	public def postCancelledAda( o ){

		//println o;

		def cancel = [:];
		cancel.objid = "CI"+new UID();
		cancel.cancelleditemid = o.objid;
		cancel.txndate = dateSvc.serverDate;
		cancel.reason = o.reason;
		cancel.createdby_objid = env.USERID;
		cancel.createdby_name = env.FULLNAME;
		cancel.createdby_jobtitle = env.JOBTITLE;
		emc.create(cancel);


		def rb = emx.findByEstRBAcct( [accountid:o.checkaccountid] );
		if ( !rb ) { 
			throw new Exception("Posting failed. Please create an account in Account Balances menu"); 				
		}

		//println rb
		
		def balance = rb.endbalance;
		rb.totaldebit += o.adaamt;
		rb.endbalance = rb.endbalance + o.adaamt;
		
		def detail = [:];
		detail.objid = "ERBI"+new UID();
		detail.parentid = rb.objid;
		detail.lineno = rb.currentlineno;
		detail.txndate = dateSvc.serverDate;
		detail.refid = o.objid;
		detail.refno = o.controlno;
		detail.refdate = o.txndate;
		detail.credit = 0;	
		detail.debit = o.adaamt;
		detail.runbalance = rb.endbalance;
		em.create(detail);
		
		rb.currentlineno += 1;
		ema.update( rb );
		return true;

	}

	@ProxyMethod
	public def postCancelledCheck( o ){

		//println o;

		def cancel = [:];
		cancel.objid = "CI"+new UID();
		cancel.cancelleditemid = o.objid;
		cancel.txndate = dateSvc.serverDate;
		cancel.reason = o.reason;
		cancel.createdby_objid = env.USERID;
		cancel.createdby_name = env.FULLNAME;
		cancel.createdby_jobtitle = env.JOBTITLE;
		emc.create(cancel);


		def rb = emx.findByEstRBAcct( [accountid:o.checkaccountid] );
		if ( !rb ) { 
			throw new Exception("Posting failed. Please create an account in Account Balances menu"); 				
		}

		//println rb
		
		def balance = rb.endbalance;
		rb.totaldebit += o.checkamt;
		rb.endbalance = rb.endbalance + o.checkamt;
		
		def detail = [:];
		detail.objid = "ERBI"+new UID();
		detail.parentid = rb.objid;
		detail.lineno = rb.currentlineno;
		detail.txndate = dateSvc.serverDate;
		detail.refid = o.objid;
		detail.refno = o.checknumber;
		detail.refdate = o.checkdate;
		detail.credit = 0;	
		detail.debit = o.checkamt;
		detail.runbalance = rb.endbalance;
		em.create(detail);
		
		rb.currentlineno += 1;
		ema.update( rb );
		return true;

	}

	@ProxyMethod
	public def compareBankaccounts( o ){

		def ba = emx.findCompareBankAccounts([bankaccount:o]);

		return ba;
	}


		
}
